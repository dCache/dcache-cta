stages:
  - build
  - package
  - publish
  - coverage

variables:
  MAVEN_CLI_OPTS: "--batch-mode --errors --no-transfer-progress --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true  -Dmaven.repo.local=.m2/repository"
  REPO_NAME: dcache-cta


build:
  stage: build
  image: maven:3.6.3-openjdk-11
  # Cache downloaded dependencies and plugins between builds.
  # To keep cache across branches add 'key: "$CI_JOB_NAME"'
  cache:
    key:
      files:
        - pom.xml
      prefix: "$CI_JOB_NAME"
    paths:
      - ./.m2/repository
  script:
    - mvn $MAVEN_CLI_OPTS clean package
  artifacts:
    reports:
      junit:
        - "target/surefire-reports/TEST-*.xml"
        - "target/failsafe-reports/TEST-*.xml"
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - "target/dcache-cta*.tar.gz"
      - "target/SPECS"

build_java_next:
  stage: build
  image: maven:3.8.4-openjdk-17
  # Cache downloaded dependencies and plugins between builds.
  # To keep cache across branches add 'key: "$CI_JOB_NAME"'
  cache:
    key:
      files:
        - pom.xml
      prefix: "$CI_JOB_NAME"
    paths:
      - ./.m2/repository
  script:
    - mvn $MAVEN_CLI_OPTS clean package
  artifacts:
    reports:
      junit:
        - "target/surefire-reports/TEST-*.xml"
        - "target/failsafe-reports/TEST-*.xml"

package_rpm:
  stage: package
  dependencies:
    - build
  image: almalinux:8
  script:
    - echo $DCACHE_ORG_PGP_KEY | base64 -d -i > secret.gpg
    - gpg --quiet --batch --yes --allow-secret-key-import --passphrase="$DCACHE_ORG_PGP_KEY_PASS" --import secret.gpg
    - gpg -k
    - gpg -a --export "$DCACHE_ORG_KEY_NAME" > RPM-GPG-KEY
    - dnf install -y rpm-build rpm-sign
    - mkdir -p rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
    - cp target/dcache-cta*.tar.gz rpmbuild/SOURCES
    - rpmbuild -ba --define "_topdir `pwd`/rpmbuild" target/SPECS/dcache-cta.spec
    - rpmsign --addsign --define "_signature gpg" --define "_gpg_name  $DCACHE_ORG_KEY_NAME" --define "_gpg_sign_cmd_extra_args --pinentry-mode loopback --passphrase $DCACHE_ORG_PGP_KEY_PASS" rpmbuild/RPMS/noarch/dcache-cta-*
    - rpmkeys --import RPM-GPG-KEY
    - rpm --checksig -v rpmbuild/RPMS/noarch/dcache-cta-*
  artifacts:
    paths:
    - rpmbuild/RPMS/noarch/dcache-cta-*

publish_tar:
  only:
    - tags
  stage: publish
  image: almalinux:8
  script:
    - dnf install -y curl
    - PACKAGE=$(ls -1 target/dcache-cta*.tar.gz)
    - PACKAGENAME=$(basename ${PACKAGE})
    - VERSION_1=${PACKAGENAME##*-}
    - VERSION=${VERSION_1%.tar.gz}
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ${PACKAGE} ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/v${VERSION}/${PACKAGENAME}'

publish_rpm:
  only:
    - tags
  stage: publish
  dependencies:
    - package_rpm
  image: almalinux:8
  script:
    - dnf install -y curl
    - PACKAGE=$(ls -1 rpmbuild/RPMS/noarch/dcache-cta-*)
    - 'curl -sS -u ${YUM_REPO_USER}:${YUM_REPO_PASS} --upload-file ${PACKAGE} ${YUM_REPO_URL}/`basename ${PACKAGE}`'

coverage:
  stage: build
  image: maven:3.6.3-openjdk-11
  script:
    - mvn $MAVEN_CLI_OPTS clean org.jacoco:jacoco-maven-plugin:prepare-agent test jacoco:report

  artifacts:
    paths:
      - "target/site/jacoco/jacoco.xml"

# Gitlab >= 14.9 required
coverage-report:
  stage: coverage
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.9
  script:
    - 'python /opt/cover2cover.py target/site/jacoco/jacoco.xml $CI_PROJECT_DIR/src/main/java/ > target/site/cobertura.xml'
  dependencies:
    - coverage
  needs: ["coverage"]
  artifacts:
    reports:
        cobertura: target/site/cobertura.xml
